#+TITLE: planning

* Tasks
** DONE Clean up dotfiles root
CLOSED: [2019-12-04 Wed 16:53]
** DONE Remove prettier/eslint
CLOSED: [2019-12-04 Wed 16:54]
** PROJ Create shell module
*** DONE Create zsh sub-module
CLOSED: [2019-12-08 Sun 17:23]
**** DONE Create .zshenv                                                :zsh:
CLOSED: [2019-12-04 Wed 20:08]
**** DONE Clean .zshrc                                                  :zsh:
CLOSED: [2019-12-04 Wed 20:08]
**** DONE Set up links
CLOSED: [2019-12-08 Sun 17:22]
#+BEGIN_EXAMPLE
ZDOT_DIR=~/.config/zsh
.zshrc-> ~/.config/zsh/.zshrc
.zshenv-> ~/.config/zsh/.zshenv
functions -> ~/.config/zsh/functions
.zshenv -> ~/.zshenv
#+END_EXAMPLE
**** DONE Find a way to switch user shell
CLOSED: [2019-12-08 Sun 17:22]

*** DONE Create tmux sub-module
CLOSED: [2019-12-08 Sun 17:59]
**** DONE Enable renumber windows                                      :tmux:
CLOSED: [2019-12-08 Sun 17:23]
**** DONE create config.yml
CLOSED: [2019-12-08 Sun 17:24]
**** DONE add to root config.yml
CLOSED: [2019-12-08 Sun 17:25]
**** DONE set up aliases
CLOSED: [2019-12-08 Sun 17:58]
**** DONE move status bar script to tmux/scripts
CLOSED: [2019-12-08 Sun 17:58]
**** DONE extract theme to tmux.theme.conf
CLOSED: [2019-12-08 Sun 17:59]
**** DONE run playbook to link
CLOSED: [2019-12-08 Sun 17:59]
*** DONE Move alacritty to shell
CLOSED: [2019-12-09 Mon 10:46]
*** TODO Move git stuff to git
*** DONE Fix todos in zshrc
CLOSED: [2019-12-09 Mon 12:27]
*** TODO move aliases to appropriate topic
*** TODO groom path setting
Use path instead of PATH, move statements to appropriate topics
** PROJ Create editor module
*** DONE Create vim sub-module
CLOSED: [2019-12-08 Sun 19:42]
**** DONE move vim to editor
CLOSED: [2019-12-08 Sun 18:02]
**** DONE setup env
CLOSED: [2019-12-08 Sun 19:41]
**** DONE setup aliases
CLOSED: [2019-12-08 Sun 19:41]
**** DONE add config
CLOSED: [2019-12-08 Sun 19:41]
**** DONE Clean .vimrc                                                  :vim:
CLOSED: [2019-12-08 Sun 19:41]
*** DONE Create emacs sub-module
CLOSED: [2019-12-08 Sun 22:07]
*** TODO Create vscode sub-module
*** DONE Create editorconfig sub-module
CLOSED: [2019-12-09 Mon 10:29]
** DONE Create keyboard module
CLOSED: [2019-12-09 Mon 10:19]
*** DONE Create hammerspoon sub-module
CLOSED: [2019-12-09 Mon 10:19]
**** DONE Clean hammerspoon                                        :keyboard:
CLOSED: [2019-12-09 Mon 10:19]
**** DONE set default entrypoint
CLOSED: [2019-12-09 Mon 10:19]
#+BEGIN_SRC bash
defaults write org.hammerspoon.Hammerspoon MJConfigFile "~/.config/hammerspoon/init.lua"
#+END_SRC
*** DONE Create karabiner sub-module
CLOSED: [2019-12-09 Mon 10:19]
** PROJ Create langs module
*** TODO node
*** TODO java
*** TODO python
*** TODO go
** TODO Make gitignore sensible
** TODO Update readme
** TODO Add steps to install ansible
* Operations

- install
- update
- remove
- link?
* Dependecies
** ruby
*** travis
** python
*** molecule
*** ansible, duh
** node
*** globals

/usr/local/lib
├── gatsby-cli@2.8.11
├── lorem-ipsum@2.0.3
├── netlify-cli@2.21.0
├── nodemon@1.19.4
├── npm@6.12.1
├── prettier@1.19.1
├── semantic-release-cli@5.2.3
└── serve@11.2.0

** base
*** general
**** dropbox
**** magnet !
**** tooth fairy !
**** bartender
**** alfred
**** amethyst
**** discord
**** chrome
**** lastpass
**** google-chrome
**** karabiner-elements
**** hammerspoon
**** istat-menus
**** textexpander
**** drafts !
**** spotify
**** slack
**** things !
*** dev
**** postman
**** visual-studio-code
**** intellij-idea-ce
**** emacs ? d12frosted/emacs-plus
**** firefox developer edition ? homebrew/cask-versions
*** fonts
Tap cask-fonts
- iosevka
- meslo
- sourcecode pro

* scripts

** bootstrap.sh
One liner to get started
** cli.sh
CLI for operations
** prerequisites.sh ?
For downloading prerequisites
** update-all.sh
- zplug
- vimplug
- homebrew
- doom?
* directory layout
** base
** bin
** dev
*** docker
*** vagrant
** editor
*** emacs
*** intellij
*** vim
*** vscode
** keyboard
*** hammerspoon
*** karabiner
** lang
** shell
*** bash
*** git
*** tmux
*** zsh
* maps to
** ~/.config/
*** alacritty
*** amethyst
*** doom.d
*** tmux
*** vim
*** zsh
* Back to basics
** dotfiles
should have a cli for running the playbook if I so desire
** playbooks
*** dev-book
Has a config.yml to configure homebrew and mas

Should reference Brewfile located in .dotfiles/homebrew
or not.. maybe it's better to keep it in the config. I could have a default and
reference the dotfile directory to override it.

**** tasks
Is there anything more? Keep it simple.
***** zplug
***** vimplug
** roles
*** geerlingguy.homebrew
*** geerlingguy.mas
*** eliasnorrby.dotfiles
**** link all the stuff, but how?
** tests
*** test with travis!
*** and possibly molecule
* playbook variables
** Modular approach

Okay, I think I have the sourcing order down.

Least to highest priority:
- default.config.yml
- dotfiles*

Dotfiles variables are kept as:
#+BEGIN_EXAMPLE
.dotfiles
- shell
  - zsh
    - config.yml
  - tmux
    - config.yml
- editor
  - vim
    - config.yml
- config.yml
#+END_EXAMPLE

The topic configs need to be sources first: they populate the 'topics' object
defined in the root config.yml.

But for now, I should work using only the default.config.yml.

To add a new topic: (area/topic)
- create a config.yml (area/topic/config.yml)
  - contents:
    #+BEGIN_SRC yaml
    topic_config:
      # required
      path: area/topic
      # optional
      links:
        - src: something
          dest: somewhere
      brew_taps:
        - something
        - another
      brew_formulas:
        - something
        - another
      brew_casks:
        - something
        - another
    #+END_SRC
- create an entry in the root config.yml (dotfiles/config.yml)
  #+BEGIN_SRC yaml
  topics:
    area:
      - name: topic
        state: present
        config: "{{ topic_config }}"
  #+END_SRC

*** Schema
The config schema looks like this:

#+BEGIN_SRC yaml
- name: zsh
  state: present
  config:
    path: shell/zsh
    brew_formulas:
      - zsh
      - fzf
      - ripgrep
    links:
      - src: .zshrc
        dest: "{{ ZDOT_DIR }}"
      - src: .zshenv
        dest: "{{ ZDOT_DIR }}"

# Link topics
- name: link topics
  file:
    path: "{{ dotfiles + '/' + item.path }}"
    dest: "{{ dotfiles_data + '/' + (item.path | replace('/', '.')) }}"
    state: link
  loop: "{{ enabled_topics }}"
# Link command:
- name: link stuff
  file:
    path: "{{ item.src }}"
    dest: "{{ item.dest | regex_replace('/$', '/' + item.src) }}"
    state: link
  loop: "{{ all_links }}"
#+END_SRC

Looping: [[https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#defining-inner-and-outer-variable-names-with-loop-var][link]]

** A way to analyse directory names

#+BEGIN_SRC yaml
- name: get enabled modules
  find:
    path: "{{ dotfiles_data }}"
    patterns: "*"
    file_type: directory
  register: topics

- debug:
    var: topics.files

- set_fact:
    enabled_topics: "{{ topics.files | map(attribute='path') | map('regex_replace', '^.*/([^/]+)\\.topic$', '\\1') | map('replace', '.', '/') | list }}"

- debug:
    msg: "{{ enabled_topics }}"
#+END_SRC
