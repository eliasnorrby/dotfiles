#+TITLE: planning

* Tasks
** DONE Clean up dotfiles root
CLOSED: [2019-12-04 Wed 16:53]
** DONE Remove prettier/eslint
CLOSED: [2019-12-04 Wed 16:54]
** PROJ Create shell module
*** TODO Create zsh sub-module
**** DONE Create .zshenv                                                :zsh:
CLOSED: [2019-12-04 Wed 20:08]
**** DONE Clean .zshrc                                                  :zsh:
CLOSED: [2019-12-04 Wed 20:08]
**** TODO Set up links
#+BEGIN_EXAMPLE
ZDOT_DIR=~/.config/zsh
.zshrc-> ~/.config/zsh/.zshrc
.zshenv-> ~/.config/zsh/.zshenv
functions -> ~/.config/zsh/functions
.zshenv -> ~/.zshenv
#+END_EXAMPLE
**** TODO Find a way to switch user shell

*** TODO Create tmux sub-module
**** TODO Enable renumber windows                                      :tmux:
** PROJ Create editor module
*** TODO Create vim sub-module
**** TODO Clean .vimrc                                                  :vim:
*** TODO Create emacs sub-module
** PROJ Create keyboard module
*** TODO Create hammerspoon sub-module
**** TODO Clean hammerspoon                                        :keyboard:
*** TODO Create karabiner sub-module
** PROJ Create langs module
*** TODO node
*** TODO java
*** TODO python
*** TODO go
** TODO Make gitignore sensible
* Operations

- install
- update
- remove
- link?

* node
** globals

/usr/local/lib
├── gatsby-cli@2.8.11
├── lorem-ipsum@2.0.3
├── netlify-cli@2.21.0
├── nodemon@1.19.4
├── npm@6.12.1
├── prettier@1.19.1
├── semantic-release-cli@5.2.3
└── serve@11.2.0

* base
** general
*** dropbox
*** magnet !
*** tooth fairy !
*** bartender
*** alfred
*** amethyst
*** discord
*** chrome
*** lastpass
*** google-chrome
*** karabiner-elements
*** hammerspoon
*** istat-menus
*** textexpander
*** drafts !
*** spotify
*** slack
*** things !
** dev
*** postman
*** visual-studio-code
*** intellij-idea-ce
*** emacs ? d12frosted/emacs-plus
*** firefox developer edition ? homebrew/cask-versions
** fonts
Tap cask-fonts
- iosevka
- meslo
- sourcecode pro

* scripts

** bootstrap.sh
One liner to get started
** cli.sh
CLI for operations
** prerequisites.sh ?
For downloading prerequisites
** update-all.sh
- zplug
- vimplug
- homebrew
- doom?
* directory layout
** base
** bin
** dev
*** docker
*** vagrant
** editor
*** emacs
*** intellij
*** vim
*** vscode
** keyboard
*** hammerspoon
*** karabiner
** lang
** shell
*** bash
*** git
*** tmux
*** zsh
* maps to
** ~/.config/
*** alacritty
*** amethyst
*** doom.d
*** tmux
*** vim
*** zsh
* Back to basics
** dotfiles
should have a cli for running the playbook if I so desire
** playbooks
*** dev-book
Has a config.yml to configure homebrew and mas

Should reference Brewfile located in .dotfiles/homebrew
or not.. maybe it's better to keep it in the config. I could have a default and
reference the dotfile directory to override it.

**** tasks
Is there anything more? Keep it simple.
***** zplug
***** vimplug
** roles
*** geerlingguy.homebrew
*** geerlingguy.mas
*** eliasnorrby.dotfiles
**** link all the stuff, but how?
** tests
*** test with travis!
*** and possibly molecule
* playbook variables
** Modular approach

Okay, I think I have the sourcing order down.

Least to highest priority:
- default.config.yml
- dotfiles*

Dotfiles variables are kept as:
#+BEGIN_EXAMPLE
.dotfiles
- shell
  - zsh
    - config.yml
  - tmux
    - config.yml
- editor
  - vim
    - config.yml
- config.yml
#+END_EXAMPLE

The topic configs need to be sources first: they populate the 'topics' object
defined in the root config.yml.

But for now, I should work using only the default.config.yml.

*** Schema
The config schema looks like this:

#+BEGIN_SRC yaml
- name: zsh
  path: shell/zsh
  state: present
  brew_formulas:
    - zsh
    - fzf
    - ripgrep
  links:
    - src: .zshrc
      dest: "{{ ZDOT_DIR }}"
    - src: .zshenv
      dest: "{{ ZDOT_DIR }}"

# Link topics
- name: link topics
  file:
    path: "{{ dotfiles + '/' + item.path }}"
    dest: "{{ dotfiles_data + '/' + (item.path | replace('/', '.')) }}"
    state: link
  loop: "{{ enabled_topics }}"
# Link command:
- name: link stuff
  file:
    path: "{{ item.src }}"
    dest: "{{ item.dest | regex_replace('/$', '/' + item.src) }}"
    state: link
  loop: "{{ all_links }}"
#+END_SRC

Looping: [[https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#defining-inner-and-outer-variable-names-with-loop-var][link]]

** A way to analyse directory names

#+BEGIN_SRC yaml
- name: get enabled modules
  find:
    path: "{{ dotfiles_data }}"
    patterns: "*"
    file_type: directory
  register: topics

- debug:
    var: topics.files

- set_fact:
    enabled_topics: "{{ topics.files | map(attribute='path') | map('regex_replace', '^.*/([^/]+)\\.topic$', '\\1') | map('replace', '.', '/') | list }}"

- debug:
    msg: "{{ enabled_topics }}"
#+END_SRC
